version: '3'

services:
  # SpacetimeDB container
  spacetimedb:
    image: clockworklabs/spacetime
    pull_policy: always
    container_name: spacetimedb
    hostname: spacetimedb
    ports:
      - "3000:3000"  # Web interface
    volumes:
      - spacetime-data:/var/lib/spacetime
    command: start
    restart: unless-stopped

  # Rust server module - runs once and exits
  rust-server:
    build:
      context: ./game_server_module
      dockerfile: Dockerfile.server
    container_name: spacetime-rust-server
    volumes:
      - ./game_server_module:/app
      - shared-volume:/shared_volume  # Add shared volume for generated Python code
    depends_on:
      - spacetimedb
    environment:
      - SPACETIME_HOST=spacetimedb
      - SPACETIME_PORT=3000
    restart: on-failure:3  # Try up to 3 times

  # Python Quart client application
  client:
    build:
      context: ./client_game_server
      dockerfile: Dockerfile.client
    container_name: spacetime-client
    volumes:
      - ./client_game_server:/app
      - shared-volume:/app/autogen  # Mount the shared volume with generated Python code
    ports:
      - "8080:8080"  # Map host 8080 to Quart's port 8080
    depends_on:
      - spacetimedb
      - rust-server
    environment:
      - SPACETIME_HOST=spacetimedb
      - SPACETIME_PORT=3000
      - MODULE_NAME=spacetime-game-server
      - PYTHONPATH=/app:/app/autogen  # Include autogen in Python path
    restart: unless-stopped

volumes:
  spacetime-data:
  shared-volume:  # Create a shared volume for generated Python code